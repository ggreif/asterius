env:
  ASTERIUS_BRANCH: master

steps:

  - key: "asterius-base-image"
    label: "asterius-base-image"
    command: |
      rm -rf /tmp/asterius*
      mkdir -p /tmp/asterius
      mv .buildkite/* /tmp/asterius
      git fetch origin $ASTERIUS_BRANCH
      git checkout -f origin/$ASTERIUS_BRANCH
      mv /tmp/asterius/* .buildkite

      docker system prune --all --force
      docker build \
        --compress \
        --file base.Dockerfile \
        --label "gitrev=$(git rev-parse HEAD)" \
        --network host \
        --no-cache \
        --pull \
        --squash \
        --tag terrorjack/asterius:base \
        .
      nix-shell \
        .buildkite/shell.nix \
        --run "docker save terrorjack/asterius:base | zstd -T8 -8 -o asterius-base-image.tar.zst"
      buildkite-agent artifact upload asterius-base-image.tar.zst
      rm asterius-base-image.tar.zst
      docker system prune --all --force

  - key: "asterius-image"
    label: "asterius-image"
    depends_on: "asterius-base-image"
    command: |
      rm -rf /tmp/asterius*
      mkdir -p /tmp/asterius
      mv .buildkite/* /tmp/asterius
      git fetch origin $ASTERIUS_BRANCH
      git checkout -f origin/$ASTERIUS_BRANCH
      mv /tmp/asterius/* .buildkite

      docker system prune --all --force
      buildkite-agent artifact download asterius-base-image.tar.zst /tmp
      nix-shell \
        .buildkite/shell.nix \
        --run "unzstd -c /tmp/asterius-base-image.tar.zst | docker load"
      rm -rf /tmp/asterius*
      docker build \
        --build-arg jobs=7 \
        --build-arg jobs_th=4 \
        --compress \
        --file stackage.Dockerfile \
        --label "gitrev=$(git rev-parse HEAD)" \
        --network host \
        --no-cache \
        --squash \
        --tag terrorjack/asterius \
        .
      nix-shell \
        .buildkite/shell.nix \
        --run "docker save terrorjack/asterius | zstd -T8 -8 -o asterius-image.tar.zst"
      buildkite-agent artifact upload asterius-image.tar.zst
      rm asterius-image.tar.zst
      docker system prune --all --force
